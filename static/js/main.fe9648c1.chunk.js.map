{"version":3,"sources":["data/datasets sync /^/.//.*/.json$","data/card/CardType.ts","data/card/CardGenerator.ts","data/random/random.ts","data/card/CardProviderFactory.ts","data/card/CardProvider.ts","ui/Card/Card.tsx","ui/Logo/Logo.tsx","ui/Card/Types/BasicCard.tsx","ui/Card/Types/BonusCard.tsx","ui/CardLibrary/CardLibrary.tsx","data/card/CardGeneratorFactory.ts","ui/Settings/Settings.tsx","ui/Menu/Menu.tsx","ui/CardCompact/CardCompact.tsx","ui/History/History.tsx","ui/Pages/Rules/Rules.tsx","ui/Pages/CardDetail/CardDetail.tsx","ui/Pages/CardList/CardList.tsx","Game.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CardType","capitalize","s","charAt","toUpperCase","slice","generateCard","cardProvider","settings","min","max","length","Math","ceil","floor","random","card","getCard","allowMiniBonuses","text","bonus","undefined","createCardProvider","datasetName","dataset","cards","getAll","require","Card","onClick","children","className","useState","wobble","setWobble","setTimeout","onAnimationEnd","data-wobble","Logo","BasicCard","BonusCard","cardResolver","type","Basic","createCardGenerator","CardLibrary","history","onCardAdded","setCard","generateCardWrapper","allowRepetition","includes","useEffect","defaultSettings","Settings","isOpen","onSave","onClose","setSettings","handleChange","target","name","checked","onRequestClose","contentLabel","onChange","Menu","to","CardCompact","number","style","width","float","textAlign","marginRight","Bonus","marginLeft","History","idx","Rules","CardDetail","params","useParams","parseInt","color","cardElement","CardList","setCardProvider","Modal","setAppElement","Game","isHistoryOpen","setIsHistoryOpen","isSettingsOpen","setIsSettingsOpen","setHistory","basename","path","exact","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe9648c1.chunk.js","sourcesContent":["var map = {\n\t\"./karticky.json\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","export enum CardType {\n    Basic,\n    Bonus\n}","import { ISettings } from \"../../ui/Settings/Settings\";\nimport { getRandomInt } from \"../random/random\";\nimport { ICardProvider } from \"./CardProvider\";\nimport { ICard } from \"./ICard\";\n\nconst capitalize = (s : string) => {\n    if (s === \"\") return \"\"\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n\nexport const generateCard = (cardProvider: ICardProvider, settings: ISettings) : ICard => {\n    const id = getRandomInt(0, cardProvider.length - 1);\n    const card = cardProvider.getCard(id)\n\n    if (!settings.allowMiniBonuses)\n        return {...card, text: capitalize(card.text), bonus: undefined, id: id};\n    return {...card, text: capitalize(card.text), id: id};\n}","export const getRandomInt = (min: number, max: number) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}","import { IDataset } from \"../dataset/IDataset\";\nimport { cardProvider } from \"./CardProvider\";\n\nexport const createCardProvider = (datasetName: string) => {\n    const dataset : IDataset = require(`./../datasets/${datasetName}.json`)\n    return cardProvider(dataset);\n}","import { IDataset } from \"../dataset/IDataset\";\nimport { ICard } from \"./ICard\";\n\nexport interface ICardProvider {\n    length: number,\n    getCard: (id: number) => ICard,\n    getAll: () => ICard[]\n}\n\nexport const cardProvider = (dataset: IDataset) : ICardProvider=> {\n    return {\n        length: dataset.cards.length,\n        getCard: (id: number) : ICard  => {\n            return {...(dataset.cards[id]), id: id}\n        },\n        getAll: () => {\n            return dataset.cards.map((card, id) => ({...card, id: id}))\n        }\n    }\n}","import React, { useState } from \"react\";\nimport \"./Card.css\";\n\ninterface IProps {\n    onClick: any;\n    children: JSX.Element;\n    className?: string;\n}\n\nexport const Card = ({ onClick, children, className }: IProps) => {\n    const [wobble, setWobble] = useState(0);\n\n    const onClickHandler = (e: any) => {\n        if (wobble !== 0)\n            return;\n\n        onClick(e);\n        setWobble(1);\n        setTimeout(() => setWobble(0), 1000)\n    };\n\n    return (\n            <div\n                className={\"card \" + (className ? className : \"\")}\n                onClick={onClickHandler}\n                onAnimationEnd={() => setWobble(0)}\n                data-wobble={wobble}\n                id=\"card\"\n            >\n                {children}\n            </div>\n    );\n};\n","import React from \"react\";\nimport \"./Logo.css\";\n\nexport const Logo = () => {\n    return (\n        <span className=\"logo\">\n            <i className=\"fas fa-glass-martini-alt logo-icon\"></i>\n            <span>KARTIČKY</span>\n        </span>\n    )\n}","import { ICard } from \"../../../data/card/ICard\";\nimport { Card } from \"../Card\";\nimport React from \"react\";\nimport { Logo } from \"../../Logo/Logo\";\nimport \"./BasicCard.css\";\n\ninterface IProps {\n    card: ICard;\n    onClick?: () => void;\n}\n\nexport const BasicCard = ({ card, onClick }: IProps) => {\n    const { text, bonus } = card;\n\n    return (\n        <Card onClick={onClick}>\n            <>\n                <div>\n                    <div className=\"card-header\">\n                        <Logo />\n                    </div>\n                    <div className=\"card-text\">{text}</div>\n                </div>\n                {bonus && (\n                    <div className=\"card-bonus\">\n                        <div className=\"card-bonus-text\">\n                            <i className=\"fas fa-beer\"></i> {bonus}\n                        </div>\n                    </div>\n                )}\n            </>\n        </Card>\n    );\n};\n","import { ICard } from \"../../../data/card/ICard\";\nimport { Card } from \"../Card\";\nimport React from \"react\";\nimport { Logo } from \"../../Logo/Logo\";\nimport \"./BonusCard.css\"\n\ninterface IProps {\n    card: ICard;\n    onClick: () => void;\n}\n\nexport const BonusCard = ({ card, onClick} : IProps) => {\n    const { text } = card;\n\n    return (\n        <Card onClick={onClick} className=\"card-dark\">\n            <>\n                <div>\n                    <div className=\"card-header\">\n                        <Logo />\n                    </div>\n                    <div className=\"card-star\">\n                        <i className=\"far fa-star\"></i>\n                    </div>\n                    <div className=\"card-text\">{text}</div>\n                </div>\n            </>\n        </Card>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport { createCardGenerator } from \"../../data/card/CardGeneratorFactory\";\nimport { CardType } from \"../../data/card/CardType\";\nimport { ICard } from \"../../data/card/ICard\";\nimport { BasicCard } from \"../Card/Types/BasicCard\";\nimport { BonusCard } from \"../Card/Types/BonusCard\";\nimport { ISettings } from \"../Settings/Settings\";\nimport \"./CardLibrary.css\";\n\ninterface Props {\n    datasetName?: string;\n    settings: ISettings;\n    history: ICard[];\n    onCardAdded: (card: ICard) => void;\n}\n\nexport const cardResolver = (card: ICard, onClick: () => void) => (\n    <>\n    {card && card.type === CardType.Basic ? (\n        <BasicCard onClick={onClick} card={card} />\n    ) : (\n        <BonusCard onClick={onClick} card={card} />\n    )}\n    </>\n)\n\nconst generateCard = createCardGenerator(\"karticky\");\n\nexport const CardLibrary = ({\n    datasetName,\n    settings,\n    history,\n    onCardAdded,\n}: Props) => {\n    const [card, setCard] = useState<ICard>();\n\n    const generateCardWrapper = () => {\n        let card = generateCard(settings);\n\n        // Exclude already displayed card if setting\n        while (!settings.allowRepetition && history.includes(card)) {\n            card = generateCard(settings);\n        }\n\n        onCardAdded(card);\n        setCard(card);\n    };\n\n    useEffect(() => {\n        generateCardWrapper();\n    }, []);\n\n    const onClick = () => {\n        generateCardWrapper();\n    }\n\n    return (\n        <div className=\"card-library\">\n            {card && cardResolver(card, onClick)}\n            <div className=\"card-library-help bounce-7\">Klikni na kartu👆</div>\n            \n        </div>\n    );\n};\n","import { ISettings } from \"../../ui/Settings/Settings\";\nimport { generateCard } from \"./CardGenerator\";\nimport { createCardProvider } from \"./CardProviderFactory\";\nimport { ICard } from \"./ICard\";\n\nexport type CardGenerator = (settings : ISettings) => ICard;\n\nexport const createCardGenerator = (datasetName: string) : CardGenerator => {\n    const cardProvider = createCardProvider(datasetName)\n    return (settings : ISettings) => generateCard(cardProvider, settings);\n}","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./Settings.css\"\n\nexport interface ISettings {\n    allowRepetition: boolean;\n    allowMiniBonuses: boolean\n}\n\ninterface IProps {\n    isOpen: boolean;\n    onSave: (settings : ISettings) => void;\n    onClose: () => void;\n}\n\nexport const defaultSettings : ISettings = {\n    allowRepetition: true,\n    allowMiniBonuses: true,\n};\n\nexport const Settings = ({ isOpen, onSave, onClose }: IProps) => {\n    const [settings, setSettings] = useState(defaultSettings);\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.type === \"checkbox\") {\n            setSettings({\n                ...settings,\n                [e.target.name]: e.target.checked\n            })\n        }\n    };\n\n    useEffect(() => {\n        onSave(settings)\n    }, [settings, onSave]);\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={onClose}\n            contentLabel=\"Nastavení\"\n        >\n            <h2>Nastavení</h2>\n            <div>\n            <h5 className=\"settings-subtitle\">Povolit opakování karet</h5>\n            <input\n                type=\"checkbox\"\n                name=\"allowRepetition\"\n                onChange={handleChange}\n                checked={settings.allowRepetition}\n            />\n            </div>\n            <div>\n            <h5 className=\"settings-subtitle\">Povolit minibonusy</h5>\n            <input\n                type=\"checkbox\"\n                name=\"allowMiniBonuses\"\n                onChange={handleChange}\n                checked={settings.allowMiniBonuses}\n            />\n            </div>\n            <div className=\"modal-close\" onClick={onClose}><i className=\"fas fa-times\"></i></div>\n        </Modal>\n    );\n};\n","import React from \"react\";\nimport { Logo } from \"../Logo/Logo\";\nimport \"./Menu.css\"\nimport {\n    Link\n  } from \"react-router-dom\";\n\ninterface Props {\n    children: any\n}\n\nexport const Menu = ({children} : Props) => {\n    return (\n        <nav className=\"menu\">\n            <Link to=\"/\"><Logo /></Link>\n            {children}\n        </nav>\n    )\n}","import React from \"react\";\nimport { CardType } from \"../../data/card/CardType\";\nimport { ICard } from \"../../data/card/ICard\";\n\ninterface IProps {\n    card: ICard;\n    number?: number;\n}\n\nexport const CardCompact = ({ card, number }: IProps) => {\n    return (\n        <div>\n            <div>\n                <span\n                    style={{\n                        width: \"1rem\",\n                        float: \"left\",\n                        textAlign: \"right\",\n                        marginRight: \"1rem\",\n                    }}\n                >\n                    {number ? number : card.id}.\n                </span>\n                <strong>\n                    {card.type === CardType.Bonus && (\n                        <i className=\"far fa-star\"></i>\n                    )}\n                    {card.text}\n                </strong>\n            </div>\n            {card.bonus && <div style={{marginLeft: \"2rem\"}}>\n            <small>{card.bonus}</small>\n            </div>}\n        </div>\n    );\n};\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { ICard } from \"../../data/card/ICard\";\nimport { CardCompact } from \"../CardCompact/CardCompact\";\n\ninterface IProps {\n    isOpen: boolean;\n    history: ICard[]\n    onClose: () => void;\n}\n\nexport const History = ({ isOpen, history, onClose }: IProps) => {\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={onClose}\n            contentLabel=\"Nastavení\"\n        >\n            <h2>Historie</h2>\n            {history.map((card, idx) => (\n                <CardCompact card={card} number={idx + 1} key={idx} />\n            ))}\n            <div className=\"modal-close\" onClick={onClose}><i className=\"fas fa-times\"></i></div>\n        </Modal>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Rules.css\"\n\nexport const Rules = () => {\n    return (\n        <div className=\"rules\">\n            <h2>Pravidla hry</h2>\n            <p>\n                Hra je pro dva a více hráčů a princip hry je jednoduchý -\n                zkrátka klepnete na kartu a nahlas přečtete otázku nebo úkol na\n                kartě a buďto splníte nebo odpovíte na to, co je na ní, nebo\n                pijete panáka a jede další hráč.\n            </p>\n            <p>\n                Během hraní hry narazíte na dva typy karet, klasické bílé s\n                otázkou nebo černé bonusové.\n            </p>\n            <p>\n                Také je možné v nastavení zapnout generování minibonusů přímo na\n                karty s otázkou nebo povolit opakování karet.\n            </p>\n\n            <Link to=\"/\"><strong>🍻 Zpět do hry</strong></Link>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { createCardProvider } from \"../../../data/card/CardProviderFactory\";\nimport { cardResolver } from \"../../CardLibrary/CardLibrary\";\n\ninterface IParams {\n    id: string;\n}\n\nexport const CardDetail = () => {\n    const params = useParams<IParams>();\n    const id = parseInt(params.id);\n    const cardProvider = createCardProvider(\"karticky\");\n\n    if (id >= cardProvider.length) {\n        return (\n            <div>\n                <strong style={{ color: \"#ee3333\" }}>\n                    Karta s tímto ID neexistuje!\n                </strong>\n            </div>\n        );\n    }\n    const card = cardProvider.getCard(id);\n    const cardElement = cardResolver(card, () => {});\n    return (\n        <div>\n            <h2>\n                ID Karty: <strong>{id}</strong>\n            </h2>\n            {cardElement}\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { ICardProvider } from \"../../../data/card/CardProvider\"\nimport { createCardProvider } from \"../../../data/card/CardProviderFactory\"\nimport { CardCompact } from \"../../CardCompact/CardCompact\"\n\nexport const CardList = () => {\n    const [cardProvider, setCardProvider] = useState<ICardProvider>()\n    \n    useEffect(() => {\n        setCardProvider(createCardProvider(\"karticky\"))\n    }, [])\n\n    return (\n        <div>\n            {cardProvider?.getAll().map(card => (<Link to={`/karta/${card.id}`}><CardCompact card={card}/></Link>))}\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport \"./Game.css\";\nimport { CardLibrary } from \"./ui/CardLibrary/CardLibrary\";\nimport { defaultSettings, Settings } from \"./ui/Settings/Settings\";\nimport { Menu } from \"./ui/Menu/Menu\";\nimport { History } from \"./ui/History/History\";\nimport { ICard } from \"./data/card/ICard\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport { Rules } from \"./ui/Pages/Rules/Rules\";\nimport { CardDetail } from \"./ui/Pages/CardDetail/CardDetail\";\nimport { CardList } from \"./ui/Pages/CardList/CardList\";\nimport Modal from \"react-modal\"\n\nModal.setAppElement(\"#app\")\n\nexport const Game = () => {\n    const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n    const [settings, setSettings] = useState(defaultSettings);\n    const [history, setHistory] = useState<ICard[]>([]);\n\n    const addToHistory = (card: ICard) => {\n        setHistory([...history, card]);\n    };\n\n    return (\n        <div className=\"app\" id=\"app\">\n            <Router basename=\"/karticky\">\n            <Menu>\n                <div>\n                    <Link to=\"/pravidla\" className=\"menu-item\"><i className=\"fas fa-info\"></i> Pravidla</Link>\n                    <span\n                        onClick={() => setIsHistoryOpen(true)}\n                        className=\"menu-item cursor-pointer\"\n                    >\n                        <i className=\"fas fa-history\"></i> Historie\n                    </span>\n                    <span\n                        onClick={() => setIsSettingsOpen(true)}\n                        className=\"menu-item cursor-pointer\"\n                    >\n                        <i className=\"fas fa-cog\"></i> Nastavení\n                    </span>\n                </div>\n            </Menu>\n            <div className=\"card-container\">\n            <Switch>\n          <Route path=\"/pravidla\">\n            <Rules />\n          </Route>\n          <Route path=\"/vsechny_karty\">\n            <CardList />\n          </Route>\n          <Route path=\"/karta/:id\">\n            <CardDetail />\n          </Route>\n          <Route exact path=\"/\">\n          <CardLibrary\n                    settings={settings}\n                    onCardAdded={addToHistory}\n                    history={history}\n                />\n          </Route>\n        </Switch>\n            </div>\n            <Settings\n                isOpen={isSettingsOpen}\n                onClose={() => setIsSettingsOpen(false)}\n                onSave={(data) => setSettings(data)}\n            />\n            <History\n                isOpen={isHistoryOpen}\n                onClose={() => setIsHistoryOpen(false)}\n                history={history}\n            />\n            </Router>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Game } from './Game';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}