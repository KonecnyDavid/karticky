{"version":3,"sources":["data/datasets sync /^/.//.*/.json$","data/card/CardType.ts","data/random/random.ts","data/card/CardGenerator.ts","ui/Card/Card.tsx","ui/Logo/Logo.tsx","ui/Card/Types/BasicCard.tsx","ui/Card/Types/BonusCard.tsx","ui/CardLibrary/CardLibrary.tsx","data/card/CardGeneratorFactory.ts","ui/Settings/Settings.tsx","ui/Menu/Menu.tsx","ui/History/HistoryItem/HistoryItem.tsx","ui/History/History.tsx","ui/Rules/Rules.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CardType","getRandomInt","min","max","Math","ceil","floor","random","capitalize","s","charAt","toUpperCase","slice","Card","onClick","children","className","useState","wobble","setWobble","onAnimationEnd","data-wobble","Logo","BasicCard","card","text","bonus","BonusCard","generateCard","datasetName","dataset","require","getQuestion","questions","length","getBonus","bonuses","propability","type","Bonus","Basic","createCardGenerator","CardLibrary","settings","history","onCardAdded","setCard","generateCardWrapper","allowRepetition","includes","useEffect","cardElem","defaultSettings","Settings","isOpen","onSave","onClose","setSettings","onRequestClose","contentLabel","name","onChange","target","checked","Menu","to","HistoryItem","number","style","width","float","textAlign","marginRight","marginLeft","History","idx","Rules","paddingLeft","paddingRight","App","isHistoryOpen","setIsHistoryOpen","isSettingsOpen","setIsSettingsOpen","setHistory","basename","path","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6a73a08.chunk.js","sourcesContent":["var map = {\n\t\"./karticky.json\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","export enum CardType {\n    Basic,\n    Bonus\n}","export const getRandomInt = (min: number, max: number) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}","import { IDataset } from \"../dataset/IDataset\";\nimport { getRandomInt } from \"../random/random\";\nimport { CardType } from \"./CardType\";\nimport { ICard } from \"./ICard\";\n\nconst capitalize = (s : string) => {\n    if (s === \"\") return \"\"\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\nexport const generateCard = (dataset: IDataset) : ICard => {\n    const getQuestion = () => {\n        return capitalize(dataset.questions[getRandomInt(0, dataset.questions.length)])\n    }\n    const getBonus=  () => {\n        return capitalize(dataset.bonuses[getRandomInt(0, dataset.bonuses.length)])\n    }\n    const propability = Math.random()\n\n    if (propability < 0.1){\n        return {type: CardType.Bonus, text: getBonus()}\n    }\n    if (propability < 0.3){\n        return {type: CardType.Basic, text: getQuestion(), bonus: getBonus()}\n    }\n    return {type: CardType.Basic, text: getQuestion()}\n}","import React, { useState } from \"react\";\nimport \"./Card.css\";\n\ninterface IProps {\n    onClick: any;\n    children: JSX.Element;\n    className?: string\n}\n\nexport const Card = ({ onClick, children, className }: IProps) => {\n    const [wobble, setWobble] = useState(0);\n\n    const onClickHandler = (e: any) => {\n        onClick(e);\n        setWobble(1)\n    };\n\n    return (\n        <div\n            className={\"card \" + className}\n            onClick={onClickHandler}\n            onAnimationEnd={() => setWobble(0)}\n            data-wobble={wobble}\n        >\n            {children}\n        </div>\n    );\n};\n","import React from \"react\";\nimport \"./Logo.css\";\n\nexport const Logo = () => {\n    return (\n        <span className=\"logo\">\n            <i className=\"fas fa-glass-martini-alt logo-icon\"></i>\n            <span>KARTIÄŒKY</span>\n        </span>\n    )\n}","import { ICard } from \"../../../data/card/ICard\";\nimport { Card } from \"../Card\";\nimport React from \"react\";\nimport { Logo } from \"../../Logo/Logo\";\nimport \"./BasicCard.css\";\n\ninterface IProps {\n    card: ICard;\n    onClick: () => void;\n}\n\nexport const BasicCard = ({ card, onClick }: IProps) => {\n    const { text, bonus } = card;\n\n    return (\n        <Card onClick={onClick}>\n            <>\n                <div>\n                    <div className=\"card-header\">\n                        <Logo />\n                    </div>\n                    <div className=\"card-text\">{text}</div>\n                </div>\n                {bonus && (\n                    <div className=\"card-bonus\">\n                        <div className=\"card-bonus-text\">\n                            <i className=\"fas fa-beer\"></i> {bonus}\n                        </div>\n                    </div>\n                )}\n            </>\n        </Card>\n    );\n};\n","import { ICard } from \"../../../data/card/ICard\";\nimport { Card } from \"../Card\";\nimport React from \"react\";\nimport { Logo } from \"../../Logo/Logo\";\nimport \"./BonusCard.css\"\n\ninterface IProps {\n    card: ICard;\n    onClick: () => void;\n}\n\nexport const BonusCard = ({ card, onClick} : IProps) => {\n    const { text } = card;\n\n    return (\n        <Card onClick={onClick} className=\"card-dark\">\n            <>\n                <div>\n                    <div className=\"card-header\">\n                        <Logo />\n                    </div>\n                    <div className=\"card-star\">\n                        <i className=\"far fa-star\"></i>\n                    </div>\n                    <div className=\"card-text\">{text}</div>\n                </div>\n            </>\n        </Card>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport { createCardGenerator } from \"../../data/card/CardGeneratorFactory\";\nimport { CardType } from \"../../data/card/CardType\";\nimport { ICard } from \"../../data/card/ICard\";\nimport { BasicCard } from \"../Card/Types/BasicCard\";\nimport { BonusCard } from \"../Card/Types/BonusCard\";\nimport { ISettings } from \"../Settings/Settings\";\nimport \"./CardLibrary.css\";\n\ninterface Props {\n    datasetName?: string;\n    settings: ISettings;\n    history: ICard[];\n    onCardAdded: (card : ICard) => void\n}\n\nconst generateCard = createCardGenerator(\"karticky\");\n\nexport const CardLibrary = ({ datasetName, settings, history, onCardAdded }: Props) => {\n    const [card, setCard]: any = useState(null);\n    \n    \n    const generateCardWrapper = () => {\n        let card = generateCard();\n        \n        // Exclude already displayed card if setting\n        while (!settings.allowRepetition && history.includes(card)) {\n            card = generateCard();\n        }\n\n        onCardAdded(card)\n        setCard(card);\n    }\n\n    useEffect(() => {\n        generateCardWrapper()\n    }, []);\n\n    const onClick = () => {\n        generateCardWrapper()\n    };\n\n    const cardElem =\n        card && card.type === CardType.Basic ? (\n            <BasicCard onClick={onClick} card={card} />\n        ) : (\n            <BonusCard onClick={onClick} card={card} />\n        );\n\n    return (\n        <div className=\"card-library\">\n            {card && cardElem}\n            <div className=\"card-libray-help bounce-7\">Klikni na kartuðŸ‘†</div>\n        </div>\n    );\n};\n","import { IDataset } from \"../dataset/IDataset\";\nimport { generateCard } from \"./CardGenerator\";\n\nexport const createCardGenerator = (datasetName: string) => {\n    const dataset : IDataset = require(`./../datasets/${datasetName}.json`)\n\n    return () => generateCard(dataset);\n}","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./Settings.css\"\n\nexport interface ISettings {\n    allowRepetition: boolean\n}\n\ninterface IProps {\n    isOpen: boolean;\n    onSave: (settings : ISettings) => void;\n    onClose: () => void;\n}\n\nexport const defaultSettings : ISettings = {\n    allowRepetition: true,\n};\n\nexport const Settings = ({ isOpen, onSave, onClose }: IProps) => {\n    const [settings, setSettings] = useState(defaultSettings);\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.type === \"checkbox\") {\n            setSettings({\n                ...settings,\n                [e.target.name]: e.target.checked\n            })\n        }\n    };\n\n    useEffect(() => {\n        onSave(settings)\n    }, [settings]);\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={onClose}\n            contentLabel=\"NastavenÃ­\"\n        >\n            <h2>NastavenÃ­</h2>\n            <h5 className=\"settings-subtitle\">Povolit opakovÃ¡nÃ­ karet</h5>\n            <input\n                type=\"checkbox\"\n                name=\"allowRepetition\"\n                onChange={handleChange}\n                checked={settings.allowRepetition}\n            />\n            <div className=\"modal-close\" onClick={onClose}><i className=\"fas fa-times\"></i></div>\n        </Modal>\n    );\n};\n","import React from \"react\";\nimport { Logo } from \"../Logo/Logo\";\nimport \"./Menu.css\"\nimport {\n    Link\n  } from \"react-router-dom\";\n\ninterface Props {\n    children: any\n}\n\nexport const Menu = ({children} : Props) => {\n    return (\n        <nav className=\"menu\">\n            <Link to=\"/\"><Logo /></Link>\n            {children}\n        </nav>\n    )\n}","import React from \"react\";\nimport { CardType } from \"../../../data/card/CardType\";\nimport { ICard } from \"../../../data/card/ICard\";\n\ninterface IProps {\n    card: ICard;\n    number: number;\n}\n\nexport const HistoryItem = ({ card, number }: IProps) => {\n    return (\n        <div>\n            <div>\n                <span\n                    style={{\n                        width: \"1rem\",\n                        float: \"left\",\n                        textAlign: \"right\",\n                        marginRight: \"1rem\",\n                    }}\n                >\n                    {number}.\n                </span>\n                <strong>\n                    {card.type === CardType.Bonus && (\n                        <i className=\"far fa-star\"></i>\n                    )}\n                    {card.text}\n                </strong>\n            </div>\n            {card.bonus && <div style={{marginLeft: \"2rem\"}}>\n            <small>{card.bonus}</small>\n            </div>}\n        </div>\n    );\n};\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { ICard } from \"../../data/card/ICard\";\nimport { HistoryItem } from \"./HistoryItem/HistoryItem\";\n\ninterface IProps {\n    isOpen: boolean;\n    history: ICard[]\n    onClose: () => void;\n}\n\nexport const History = ({ isOpen, history, onClose }: IProps) => {\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={onClose}\n            contentLabel=\"NastavenÃ­\"\n        >\n            <h2>Historie</h2>\n            {history.map((card, idx) => (\n                <HistoryItem card={card} number={idx + 1} key={idx} />\n            ))}\n            <div className=\"modal-close\" onClick={onClose}><i className=\"fas fa-times\"></i></div>\n        </Modal>\n    );\n};\n","import React from \"react\";\n\nexport const Rules = () => {\n    return (\n        <div style={{paddingLeft: \"5rem\", paddingRight: \"5rem\"}}>\n            <h3>Pravidla hry</h3>\n            <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis ac orci sit amet risus fermentum iaculis eget nec purus. Ut molestie nec sem lobortis luctus. Sed congue ex eget nibh tempus lacinia id ut risus. Duis eget risus quis justo egestas cursus. Sed aliquam urna vitae semper lacinia. Quisque rhoncus malesuada egestas. Aliquam vel neque sapien. Donec elementum ante eros, in commodo sapien lobortis maximus. Maecenas bibendum semper elit consectetur interdum. Vivamus condimentum urna vitae interdum tincidunt. Quisque quis tincidunt leo. Suspendisse vestibulum dapibus eleifend. Nulla vel nisl ut ante tempus ornare. Mauris dapibus gravida dignissim. Proin dictum, elit nec bibendum sodales, urna nunc dictum odio, sed malesuada ante libero ut velit.\n            </p>\n            <p>\n            Donec sagittis euismod metus ut faucibus. Praesent a purus vitae ipsum ultricies blandit. Duis sit amet augue eu erat mattis tristique. Duis sodales tincidunt fermentum. Quisque tempus lorem placerat imperdiet hendrerit. In justo turpis, porta vestibulum purus vel, tincidunt imperdiet nisl. Morbi eu mauris metus. Morbi ornare lorem turpis, ac fringilla dui eleifend eget. Morbi quis semper tellus. Nullam tincidunt efficitur est sit amet consequat. Suspendisse potenti. Quisque commodo gravida erat, vitae ornare elit dictum ac. In ornare ante erat, sit amet euismod neque tincidunt eu. Vestibulum ligula sapien, suscipit a mi quis, condimentum fermentum mi.\n            </p>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { CardLibrary } from \"./ui/CardLibrary/CardLibrary\";\nimport { defaultSettings, Settings } from \"./ui/Settings/Settings\";\nimport { Menu } from \"./ui/Menu/Menu\";\nimport { History } from \"./ui/History/History\";\nimport { ICard } from \"./data/card/ICard\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport { Rules } from \"./ui/Rules/Rules\";\n\nfunction App() {\n    const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n    const [settings, setSettings] = useState(defaultSettings);\n    const [history, setHistory] = useState<ICard[]>([]);\n\n    const addToHistory = (card: ICard) => {\n        setHistory([...history, card]);\n    };\n\n    return (\n        <div className=\"app\" id=\"app\">\n            <Router basename=\"/karticky\">\n            <Menu>\n                <div>\n                    <Link to=\"/pravidla\" className=\"menu-item\"><i className=\"fas fa-info\"></i> Pravidla</Link>\n                    <span\n                        onClick={() => setIsHistoryOpen(true)}\n                        className=\"menu-item cursor-pointer\"\n                    >\n                        <i className=\"fas fa-history\"></i> Historie\n                    </span>\n                    <span\n                        onClick={() => setIsSettingsOpen(true)}\n                        className=\"menu-item cursor-pointer\"\n                    >\n                        <i className=\"fas fa-cog\"></i> NastavenÃ­\n                    </span>\n                </div>\n            </Menu>\n            <div className=\"card-container\">\n            <Switch>\n          <Route path=\"/pravidla\">\n            <Rules />\n          </Route>\n          <Route path=\"/\">\n          <CardLibrary\n                    settings={settings}\n                    onCardAdded={addToHistory}\n                    history={history}\n                />\n          </Route>\n        </Switch>\n            </div>\n            <Settings\n                isOpen={isSettingsOpen}\n                onClose={() => setIsSettingsOpen(false)}\n                onSave={(data) => setSettings(data)}\n            />\n            <History\n                isOpen={isHistoryOpen}\n                onClose={() => setIsHistoryOpen(false)}\n                history={history}\n            />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}