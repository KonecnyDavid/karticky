{"version":3,"sources":["data/loadDataset.ts","ui/Logo/Logo.tsx","ui/Card/Card.tsx","ui/CardLibrary/CardLibrary.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getRandomInt","min","max","Math","ceil","floor","random","Logo","className","Card","text","bonus","onClick","dataset","karticky","require","getQuestion","questions","length","getBonus","bonuses","loadDataset","createCard","CardLibrary","datasetName","useState","card","setCard","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gvhBAAA,SAASA,EAAaC,EAAaC,GAG/B,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,E,MAGlD,ICHMM,EAAO,WAChB,OACI,uBAAMC,UAAU,OAAhB,UACI,mBAAGA,UAAU,uCACb,qDCGCC,G,MAAO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAChC,OACI,sBAAKJ,UAAU,OAAOI,QAASA,EAA/B,UACI,gCACI,qBAAKJ,UAAU,cAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,YAAf,SAA4BE,OAE/BC,GACG,qBAAKH,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,sECZdK,G,MHHqB,WACvB,IAAMC,EAAWC,EAAQ,IAEzB,MAAO,CACHC,YAAa,WACT,OAAOF,EAASG,UAAUjB,EAAa,EAAGc,EAASG,UAAUC,UAEjEC,SAAU,WACN,OAAOL,EAASM,QAAQpB,EAAa,EAAGc,EAASG,UAAUG,YGLvDC,IAEVC,EAAa,WACf,MAAO,CACHZ,KAAMG,EAAQG,cACdL,MAAOR,KAAKG,SAAW,GAAMO,EAAQG,cAAgB,OAIhDO,EAAc,SAAC,GAA0B,EAAzBC,YAA0B,IAAD,EACpBC,qBADoB,mBAC3CC,EAD2C,KACrCC,EADqC,KAGlDC,qBAAU,WACND,EAAQL,OACT,IAMH,OACI,8BACI,cAAC,EAAD,2BAAUI,GAAV,IAAgBd,QANR,WACZe,EAAQL,YCdDO,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,OCOSsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31eb206c.chunk.js","sourcesContent":["function getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const loadDataset = () => {\n    const karticky = require(\"./dataset/karticky.json\")\n\n    return {\n        getQuestion: () => {\n            return karticky.questions[getRandomInt(0, karticky.questions.length)]\n        },\n        getBonus: () => {\n            return karticky.bonuses[getRandomInt(0, karticky.questions.bonuses)]\n        }\n    }\n}","import React from \"react\";\nimport \"./Logo.css\";\n\nexport const Logo = () => {\n    return (\n        <span className=\"logo\">\n            <i className=\"fas fa-glass-martini-alt logo-icon\"></i>\n            <span>KARTIČKY</span>\n        </span>\n    )\n}","import React from \"react\";\nimport { Logo } from \"../Logo/Logo\";\nimport \"./Card.css\";\n\ninterface Props {\n    text: string;\n    bonus?: string;\n    onClick: any\n}\n\nexport const Card = ({ text, bonus, onClick}: Props) => {\n    return (\n        <div className=\"card\" onClick={onClick}>\n            <div>\n                <div className=\"card-header\">\n                    <Logo />\n                </div>\n                <div className=\"card-text\">{text}</div>\n            </div>\n            {bonus && (\n                <div className=\"card-bonus\">\n                    <div className=\"card-bonus-text\">\n                        Příštího panáka nelze zapít\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { loadDataset } from \"../../data/loadDataset\";\nimport { Card } from \"../Card/Card\";\nimport \"./CardLibrary.css\"\n\ninterface Props {\n    datasetName?: string\n}\n\nconst dataset = loadDataset();\n\nconst createCard = () => {\n    return {\n        text: dataset.getQuestion(),\n        bonus: Math.random() > 0.8 ? dataset.getQuestion() : null\n    }\n}\n\nexport const CardLibrary = ({datasetName} : Props) => {\n    const [card, setCard] : any = useState()\n\n    useEffect(() => {\n        setCard(createCard())\n    }, [])\n\n    const onClick = () => {\n        setCard(createCard())\n    }\n\n    return (\n        <div>\n            <Card {...card} onClick={onClick}/>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { CardLibrary } from './ui/CardLibrary/CardLibrary';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardLibrary />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}