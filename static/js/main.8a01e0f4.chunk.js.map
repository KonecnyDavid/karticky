{"version":3,"sources":["data/datasets sync /^/.//.*/.json$","data/card/CardType.ts","data/card/CardGenerator.ts","data/random/random.ts","ui/Card/Card.tsx","ui/Logo/Logo.tsx","ui/Card/Types/BasicCard.tsx","ui/Card/Types/BonusCard.tsx","ui/CardLibrary/CardLibrary.tsx","data/card/CardGeneratorFactory.ts","ui/Settings/Settings.tsx","ui/Menu/Menu.tsx","ui/History/HistoryItem/HistoryItem.tsx","ui/History/History.tsx","ui/Pages/Rules/Rules.tsx","Game.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CardType","capitalize","s","charAt","toUpperCase","slice","generateCard","dataset","settings","min","max","cards","length","Math","ceil","floor","random","card","allowMiniBonuses","text","bonus","undefined","Card","onClick","children","className","useState","wobble","setWobble","onAnimationEnd","data-wobble","Logo","BasicCard","BonusCard","datasetName","require","createCardGenerator","CardLibrary","history","onCardAdded","setCard","generateCardWrapper","allowRepetition","includes","useEffect","cardElem","type","Basic","defaultSettings","Settings","isOpen","onSave","onClose","setSettings","handleChange","target","name","checked","onRequestClose","contentLabel","onChange","Menu","to","HistoryItem","number","style","width","float","textAlign","marginRight","Bonus","marginLeft","History","idx","Rules","Game","isHistoryOpen","setIsHistoryOpen","isSettingsOpen","setIsSettingsOpen","setHistory","basename","path","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a01e0f4.chunk.js","sourcesContent":["var map = {\n\t\"./karticky.json\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","export enum CardType {\n    Basic,\n    Bonus\n}","import { ISettings } from \"../../ui/Settings/Settings\";\nimport { IDataset } from \"../dataset/IDataset\";\nimport { getRandomInt } from \"../random/random\";\nimport { ICard } from \"./ICard\";\n\nconst capitalize = (s : string) => {\n    if (s === \"\") return \"\"\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n\nexport const generateCard = (dataset: IDataset, settings: ISettings) : ICard => {\n    const id = getRandomInt(0, dataset.cards.length - 1);\n    const card = dataset.cards[id]\n\n    if (!settings.allowMiniBonuses)\n        return {...card, text: capitalize(card.text), bonus: undefined, id: id};\n    return {...card, text: capitalize(card.text), id: id};\n}","export const getRandomInt = (min: number, max: number) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}","import React, { useState } from \"react\";\nimport \"./Card.css\";\n\ninterface IProps {\n    onClick: any;\n    children: JSX.Element;\n    className?: string\n}\n\nexport const Card = ({ onClick, children, className }: IProps) => {\n    const [wobble, setWobble] = useState(0);\n\n    const onClickHandler = (e: any) => {\n        onClick(e);\n        setWobble(1)\n    };\n\n    return (\n        <div\n            className={\"card \" + className}\n            onClick={onClickHandler}\n            onAnimationEnd={() => setWobble(0)}\n            data-wobble={wobble}\n            id=\"card\"\n        >\n            {children}\n        </div>\n    );\n};\n","import React from \"react\";\nimport \"./Logo.css\";\n\nexport const Logo = () => {\n    return (\n        <span className=\"logo\">\n            <i className=\"fas fa-glass-martini-alt logo-icon\"></i>\n            <span>KARTIČKY</span>\n        </span>\n    )\n}","import { ICard } from \"../../../data/card/ICard\";\nimport { Card } from \"../Card\";\nimport React from \"react\";\nimport { Logo } from \"../../Logo/Logo\";\nimport \"./BasicCard.css\";\n\ninterface IProps {\n    card: ICard;\n    onClick: () => void;\n}\n\nexport const BasicCard = ({ card, onClick }: IProps) => {\n    const { text, bonus } = card;\n\n    return (\n        <Card onClick={onClick}>\n            <>\n                <div>\n                    <div className=\"card-header\">\n                        <Logo />\n                    </div>\n                    <div className=\"card-text\">{text}</div>\n                </div>\n                {bonus && (\n                    <div className=\"card-bonus\">\n                        <div className=\"card-bonus-text\">\n                            <i className=\"fas fa-beer\"></i> {bonus}\n                        </div>\n                    </div>\n                )}\n            </>\n        </Card>\n    );\n};\n","import { ICard } from \"../../../data/card/ICard\";\nimport { Card } from \"../Card\";\nimport React from \"react\";\nimport { Logo } from \"../../Logo/Logo\";\nimport \"./BonusCard.css\"\n\ninterface IProps {\n    card: ICard;\n    onClick: () => void;\n}\n\nexport const BonusCard = ({ card, onClick} : IProps) => {\n    const { text } = card;\n\n    return (\n        <Card onClick={onClick} className=\"card-dark\">\n            <>\n                <div>\n                    <div className=\"card-header\">\n                        <Logo />\n                    </div>\n                    <div className=\"card-star\">\n                        <i className=\"far fa-star\"></i>\n                    </div>\n                    <div className=\"card-text\">{text}</div>\n                </div>\n            </>\n        </Card>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport { createCardGenerator } from \"../../data/card/CardGeneratorFactory\";\nimport { CardType } from \"../../data/card/CardType\";\nimport { ICard } from \"../../data/card/ICard\";\nimport { BasicCard } from \"../Card/Types/BasicCard\";\nimport { BonusCard } from \"../Card/Types/BonusCard\";\nimport { ISettings } from \"../Settings/Settings\";\nimport \"./CardLibrary.css\";\n\ninterface Props {\n    datasetName?: string;\n    settings: ISettings;\n    history: ICard[];\n    onCardAdded: (card: ICard) => void;\n}\n\nconst generateCard = createCardGenerator(\"karticky\");\n\nexport const CardLibrary = ({\n    datasetName,\n    settings,\n    history,\n    onCardAdded,\n}: Props) => {\n    const [card, setCard]: any = useState(null);\n\n    const generateCardWrapper = () => {\n        let card = generateCard(settings);\n\n        // Exclude already displayed card if setting\n        while (!settings.allowRepetition && history.includes(card)) {\n            card = generateCard(settings);\n        }\n\n        onCardAdded(card);\n        setCard(card);\n    };\n\n    useEffect(() => {\n        generateCardWrapper();\n    }, []);\n\n    const onClick = () => {\n        generateCardWrapper();\n    };\n    const cardElem =\n        card && card.type === CardType.Basic ? (\n            <BasicCard onClick={onClick} card={card} />\n        ) : (\n            <BonusCard onClick={onClick} card={card} />\n        );\n\n    return (\n        <div className=\"card-library\">\n            {card && cardElem}\n            <div className=\"card-libray-help bounce-7\">Klikni na kartu👆</div>\n            \n        </div>\n    );\n};\n","import { ISettings } from \"../../ui/Settings/Settings\";\nimport { IDataset } from \"../dataset/IDataset\";\nimport { generateCard } from \"./CardGenerator\";\n\nexport const createCardGenerator = (datasetName: string) => {\n    const dataset : IDataset = require(`./../datasets/${datasetName}.json`)\n\n    return (settings : ISettings) => generateCard(dataset, settings);\n}","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./Settings.css\"\n\nexport interface ISettings {\n    allowRepetition: boolean;\n    allowMiniBonuses: boolean\n}\n\ninterface IProps {\n    isOpen: boolean;\n    onSave: (settings : ISettings) => void;\n    onClose: () => void;\n}\n\nexport const defaultSettings : ISettings = {\n    allowRepetition: true,\n    allowMiniBonuses: true,\n};\n\nexport const Settings = ({ isOpen, onSave, onClose }: IProps) => {\n    const [settings, setSettings] = useState(defaultSettings);\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.type === \"checkbox\") {\n            setSettings({\n                ...settings,\n                [e.target.name]: e.target.checked\n            })\n        }\n    };\n\n    useEffect(() => {\n        onSave(settings)\n    }, [settings, onSave]);\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={onClose}\n            contentLabel=\"Nastavení\"\n        >\n            <h2>Nastavení</h2>\n            <div>\n            <h5 className=\"settings-subtitle\">Povolit opakování karet</h5>\n            <input\n                type=\"checkbox\"\n                name=\"allowRepetition\"\n                onChange={handleChange}\n                checked={settings.allowRepetition}\n            />\n            </div>\n            <div>\n            <h5 className=\"settings-subtitle\">Povolit minibonusy</h5>\n            <input\n                type=\"checkbox\"\n                name=\"allowMiniBonuses\"\n                onChange={handleChange}\n                checked={settings.allowMiniBonuses}\n            />\n            </div>\n            <div className=\"modal-close\" onClick={onClose}><i className=\"fas fa-times\"></i></div>\n        </Modal>\n    );\n};\n","import React from \"react\";\nimport { Logo } from \"../Logo/Logo\";\nimport \"./Menu.css\"\nimport {\n    Link\n  } from \"react-router-dom\";\n\ninterface Props {\n    children: any\n}\n\nexport const Menu = ({children} : Props) => {\n    return (\n        <nav className=\"menu\">\n            <Link to=\"/\"><Logo /></Link>\n            {children}\n        </nav>\n    )\n}","import React from \"react\";\nimport { CardType } from \"../../../data/card/CardType\";\nimport { ICard } from \"../../../data/card/ICard\";\n\ninterface IProps {\n    card: ICard;\n    number: number;\n}\n\nexport const HistoryItem = ({ card, number }: IProps) => {\n    return (\n        <div>\n            <div>\n                <span\n                    style={{\n                        width: \"1rem\",\n                        float: \"left\",\n                        textAlign: \"right\",\n                        marginRight: \"1rem\",\n                    }}\n                >\n                    {number}.\n                </span>\n                <strong>\n                    {card.type === CardType.Bonus && (\n                        <i className=\"far fa-star\"></i>\n                    )}\n                    {card.text}\n                </strong>\n            </div>\n            {card.bonus && <div style={{marginLeft: \"2rem\"}}>\n            <small>{card.bonus}</small>\n            </div>}\n        </div>\n    );\n};\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { ICard } from \"../../data/card/ICard\";\nimport { HistoryItem } from \"./HistoryItem/HistoryItem\";\n\ninterface IProps {\n    isOpen: boolean;\n    history: ICard[]\n    onClose: () => void;\n}\n\nexport const History = ({ isOpen, history, onClose }: IProps) => {\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={onClose}\n            contentLabel=\"Nastavení\"\n        >\n            <h2>Historie</h2>\n            {history.map((card, idx) => (\n                <HistoryItem card={card} number={idx + 1} key={idx} />\n            ))}\n            <div className=\"modal-close\" onClick={onClose}><i className=\"fas fa-times\"></i></div>\n        </Modal>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Rules.css\"\n\nexport const Rules = () => {\n    return (\n        <div className=\"rules\">\n            <h2>Pravidla hry</h2>\n            <p>\n                Hra je pro dva a více hráčů a princip hry je jednoduchý -\n                zkrátka klepnete na kartu a nahlas přečtete otázku nebo úkol na\n                kartě a buďto splníte nebo odpovíte na to, co je na ní, nebo\n                pijete panáka a jede další hráč.\n            </p>\n            <p>\n                Během hraní hry narazíte na dva typy karet, klasické bílé s\n                otázkou nebo černé bonusové.\n            </p>\n            <p>\n                Také je možné v nastavení zapnout generování minibonusů přímo na\n                karty s otázkou nebo povolit opakování karet.\n            </p>\n\n            <Link to=\"/\"><strong>🍻 Zpět do hry</strong></Link>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport \"./Game.css\";\nimport { CardLibrary } from \"./ui/CardLibrary/CardLibrary\";\nimport { defaultSettings, Settings } from \"./ui/Settings/Settings\";\nimport { Menu } from \"./ui/Menu/Menu\";\nimport { History } from \"./ui/History/History\";\nimport { ICard } from \"./data/card/ICard\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport { Rules } from \"./ui/Pages/Rules/Rules\";\n\nexport const Game = () => {\n    const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n    const [settings, setSettings] = useState(defaultSettings);\n    const [history, setHistory] = useState<ICard[]>([]);\n\n    const addToHistory = (card: ICard) => {\n        setHistory([...history, card]);\n    };\n\n    return (\n        <div className=\"app\" id=\"app\">\n            <Router basename=\"/karticky\">\n            <Menu>\n                <div>\n                    <Link to=\"/pravidla\" className=\"menu-item\"><i className=\"fas fa-info\"></i> Pravidla</Link>\n                    <span\n                        onClick={() => setIsHistoryOpen(true)}\n                        className=\"menu-item cursor-pointer\"\n                    >\n                        <i className=\"fas fa-history\"></i> Historie\n                    </span>\n                    <span\n                        onClick={() => setIsSettingsOpen(true)}\n                        className=\"menu-item cursor-pointer\"\n                    >\n                        <i className=\"fas fa-cog\"></i> Nastavení\n                    </span>\n                </div>\n            </Menu>\n            <div className=\"card-container\">\n            <Switch>\n          <Route path=\"/pravidla\">\n            <Rules />\n          </Route>\n          <Route path=\"/\">\n          <CardLibrary\n                    settings={settings}\n                    onCardAdded={addToHistory}\n                    history={history}\n                />\n          </Route>\n        </Switch>\n            </div>\n            <Settings\n                isOpen={isSettingsOpen}\n                onClose={() => setIsSettingsOpen(false)}\n                onSave={(data) => setSettings(data)}\n            />\n            <History\n                isOpen={isHistoryOpen}\n                onClose={() => setIsHistoryOpen(false)}\n                history={history}\n            />\n            </Router>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Game } from './Game';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}