{"version":3,"sources":["data/loadDataset.ts","ui/Logo/Logo.tsx","ui/Card/Card.tsx","ui/CardLibrary/CardLibrary.tsx","ui/Menu/Menu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getRandomInt","min","max","Math","ceil","floor","random","Logo","className","Card","text","bonus","onClick","useState","wobble","setWobble","e","onAnimationEnd","data-wobble","dataset","karticky","require","getQuestion","questions","length","getBonus","bonuses","loadDataset","createCard","CardLibrary","datasetName","card","setCard","useEffect","console","log","Menu","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kwhBAAA,SAASA,EAAaC,EAAaC,GAG/B,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,E,MAGlD,ICHMM,EAAO,WAChB,OACI,uBAAMC,UAAU,OAAhB,UACI,mBAAGA,UAAU,uCACb,qDCGCC,G,MAAO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAAqB,EACzBC,mBAAS,GADgB,mBAC9CC,EAD8C,KACtCC,EADsC,KAQrD,OACI,sBACIP,UAAU,OACVI,QARe,SAACI,GACpBJ,EAAQI,GACRD,EAAU,IAONE,eAAgB,kBAAMF,EAAU,IAChCG,cAAaJ,EAJjB,UAMI,gCACI,qBAAKN,UAAU,cAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,YAAf,SAA4BE,OAE/BC,GACG,qBAAKH,UAAU,aAAf,SACI,sBAAKA,UAAU,kBAAf,UACA,mBAAGA,UAAU,gBADb,IACiCG,YCzB/CQ,G,MHHqB,WACvB,IAAMC,EAAWC,EAAQ,IAEzB,MAAO,CACHC,YAAa,WACT,OAAOF,EAASG,UAAUvB,EAAa,EAAGoB,EAASG,UAAUC,UAEjEC,SAAU,WACN,OAAOL,EAASM,QAAQ1B,EAAa,EAAGoB,EAASM,QAAQF,WGLrDG,IAEVC,EAAa,WACf,MAAO,CACHlB,KAAMS,EAAQG,cACdX,MAAOR,KAAKG,SAAW,GAAMa,EAAQM,WAAa,OAI7CI,EAAc,SAAC,GAA0B,EAAzBC,YAA0B,IAAD,EACpBjB,qBADoB,mBAC3CkB,EAD2C,KACrCC,EADqC,KAGlDC,qBAAU,WACND,EAAQJ,OACT,IAQH,OAFAM,QAAQC,IAAIJ,GAGR,sBAAKvB,UAAU,eAAf,UACI,cAAC,EAAD,2BAAUuB,GAAV,IAAgBnB,QARR,WACZoB,EAAQJ,SAQJ,qBAAKpB,UAAU,4BAAf,6CC1BC4B,G,MAAO,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,SAClB,OACI,sBAAK7B,UAAU,OAAf,UACI,cAAC,EAAD,IACC6B,OCSEC,MAhBf,WACE,OACE,sBAAK9B,UAAU,MAAf,UACI,cAAC,EAAD,UACI,+DAIJ,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,UCAG+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6918184a.chunk.js","sourcesContent":["function getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const loadDataset = () => {\n    const karticky = require(\"./dataset/karticky.json\")\n\n    return {\n        getQuestion: () => {\n            return karticky.questions[getRandomInt(0, karticky.questions.length)]\n        },\n        getBonus: () => {\n            return karticky.bonuses[getRandomInt(0, karticky.bonuses.length)]\n        }\n    }\n}","import React from \"react\";\nimport \"./Logo.css\";\n\nexport const Logo = () => {\n    return (\n        <span className=\"logo\">\n            <i className=\"fas fa-glass-martini-alt logo-icon\"></i>\n            <span>KARTIÄŒKY</span>\n        </span>\n    )\n}","import React, { useState } from \"react\";\nimport { Logo } from \"../Logo/Logo\";\nimport \"./Card.css\";\n\ninterface Props {\n    text: string;\n    bonus?: string;\n    onClick: any;\n}\n\nexport const Card = ({ text, bonus, onClick }: Props) => {\n    const [wobble, setWobble] = useState(0);\n\n    const onClickHandler = (e: any) => {\n        onClick(e);\n        setWobble(1)\n    };\n\n    return (\n        <div\n            className=\"card\"\n            onClick={onClickHandler}\n            onAnimationEnd={() => setWobble(0)}\n            data-wobble={wobble}\n        >\n            <div>\n                <div className=\"card-header\">\n                    <Logo />\n                </div>\n                <div className=\"card-text\">{text}</div>\n            </div>\n            {bonus && (\n                <div className=\"card-bonus\">\n                    <div className=\"card-bonus-text\">\n                    <i className=\"fas fa-beer\"></i> {bonus}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { loadDataset } from \"../../data/loadDataset\";\nimport { Card } from \"../Card/Card\";\nimport \"./CardLibrary.css\"\n\ninterface Props {\n    datasetName?: string\n}\n\nconst dataset = loadDataset();\n\nconst createCard = () => {\n    return {\n        text: dataset.getQuestion(),\n        bonus: Math.random() > 0.8 ? dataset.getBonus() : null\n    }\n}\n\nexport const CardLibrary = ({datasetName} : Props) => {\n    const [card, setCard] : any = useState()\n\n    useEffect(() => {\n        setCard(createCard())\n    }, [])\n\n    const onClick = () => {\n        setCard(createCard())\n    }\n\n    console.log(card)\n\n    return (\n        <div className=\"card-library\">\n            <Card {...card} onClick={onClick}/>\n            <div className=\"card-libray-help bounce-7\">Klikni na kartuðŸ‘†</div>\n        </div>\n    )\n}","import React from \"react\";\nimport { Logo } from \"../Logo/Logo\";\nimport \"./Menu.css\"\n\ninterface Props {\n    children: any\n}\n\nexport const Menu = ({children} : Props) => {\n    return (\n        <nav className=\"menu\">\n            <Logo />\n            {children}\n        </nav>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { CardLibrary } from './ui/CardLibrary/CardLibrary';\nimport { Menu } from './ui/Menu/Menu';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <Menu>\n            <span>\n                ðŸ§ª Testing site\n            </span>\n        </Menu>\n        <div className=\"card-containder\">\n            <CardLibrary />\n        </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}